Traceback (most recent call last):
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/asyncio/base_events.py", line 685, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/homebrew/Caskroom/miniconda/base/envs/python312/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
mport numpy as np
import plotly.graph_objects as go

def f(x, y):
    """
    Die unstetige Funktion f(x,y) = xy/(x^2 + y^2) f√ºr (x,y) ‚â† (0,0) und f(0,0) = 0
    """
    # Erstelle eine Kopie des Ergebnisses, um die urspr√ºnglichen Arrays nicht zu ver√§ndern
    result = np.zeros_like(x, dtype=float)
    
    # Berechne die Funktion f√ºr alle Punkte au√üer (0,0)
    # Verwende eine Maske, um Punkte zu identifizieren, die nicht (0,0) sind
    mask = (x != 0) | (y != 0)
    result[mask] = (x[mask] * y[mask]) / (x[mask]**2 + y[mask]**2)
    
    # Der Wert an (0,0) ist definiert als 0
    # Da result bereits mit Nullen initialisiert wurde, m√ºssen wir nichts mehr tun
    
    return result

# Gitterparameter
n = 100  # Anzahl der Punkte in jeder Dimension
x_min, x_max = -1.0, 1.0
y_min, y_max = -1.0, 1.0

# Erstelle das Gitter
x = np.linspace(x_min, x_max, n)
y = np.linspace(y_min, y_max, n)
X, Y = np.meshgrid(x, y)

# Berechne die Funktionswerte
Z = f(X, Y)

# Begrenze die Werte f√ºr eine bessere Visualisierung
# Die Funktion kann extreme Werte nahe der Singularit√§t annehmen
Z = np.clip(Z, -1, 1)

# Erstelle eine interaktive 3D-Darstellung mit Plotly
fig = go.Figure(data=[go.Surface(z=Z, x=X, y=Y, colorscale='viridis')])

# Passe das Layout an
fig.update_layout(
    title='3D-Darstellung der unstetigen Funktion f(x,y) = xy/(x¬≤ + y¬≤)',
    scene=dict(
        xaxis_title='x-Achse',
        yaxis_title='y-Achse',
        zaxis_title='f(x,y)',
        zaxis=dict(range=[-1, 1]),  # Begrenze die z-Achse
        aspectratio=dict(x=1, y=1, z=0.8),
        camera=dict(
            eye=dict(x=1.5, y=1.5, z=1.2)  # Anpassung der Kameraposition
        )
    ),
    width=800,
    height=800,
    margin=dict(l=65, r=50, b=65, t=90)
)

# F√ºge Anmerkungen hinzu
fig.add_annotation(
    text="Unstetigkeit bei (0,0)",
    x=0,
    y=0,
    xref="x",
    yref="y",
    showarrow=True,
    arrowhead=2,
    arrowsize=1,
    arrowwidth=2,
    arrowcolor="#636363",
    ax=20,
    ay=-30
)

# Zeige die Figur an
fig.show()
------------------


[0;36m  Cell [0;32mIn[1], line 1[0;36m[0m
[0;31m    mport numpy as np[0m
[0m          ^[0m
[0;31mSyntaxError[0m[0;31m:[0m invalid syntax


